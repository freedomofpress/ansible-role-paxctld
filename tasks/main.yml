---
- name: Import Bradley Spengler GPG key (grsecurity maintainer) key
  command: gpg --keyserver {{ paxctld_gpg_keyserver }} --recv-keys 44D1C0F82525FE49
  register: gpg_import_spender_result
  changed_when: "'imported: 1' in gpg_import_spender_result.stderr"

- name: Fetch paxctld package.
  become: yes
  get_url:
      url: "{{ paxctld_deb_url }}"
      dest: "{{ paxctld_download_directory }}/{{ paxctld_filename }}"

- name: Fetch paxctld package signature.
  become: yes
  get_url:
      url: "{{ paxctld_sig_url }}"
      dest: "{{ paxctld_download_directory }}/{{ paxctld_filename }}.sig"

# Intentionally using the verbose two-arg format for `gpg --verify`.
# The manpage stipulates that explicitly providing the detached signature
# file, then the filename to be verified is the safest invocation.
- name: Verify paxctld package GPG signature.
  command: >
    gpg --verify
    {{ paxctld_download_directory }}/{{ paxctld_filename }}.sig
    {{ paxctld_download_directory }}/{{ paxctld_filename }}
  register: gpg_verify_result
  changed_when: false

# Write config file prior to installing package, so desired flags are set immediately.
# At the very least, python will break if you don't do this, making ansible commands
# fail (except `raw`).
- name: Write and install paxctld configuration.
  become: yes
  template:
    src: paxctld.conf.j2
    dest: /etc/paxctld.conf
  notify: restart paxctld

- name: Install paxctld deb package.
  become: yes
  apt:
    deb: "{{ paxctld_download_directory }}/{{ paxctld_filename }}"
    dpkg_options: skip-same-version,force-confdef,force-confold
  when: "'Good signature' in gpg_verify_result.stderr"
  register: paxctld_install_result
  changed_when: "'dpkg: version {{ paxctld_version }} of paxctld already installed' not in paxctld_install_result.stderr"

- name: Restart paxctld and ensure it is enabled.
  become: yes
  service:
    name: paxctld
    state: started
    enabled: yes
