---
- name: Import Bradley Spengler GPG key (grsecurity maintainer) key
  command: gpg --keyserver {{ gpg_keyserver }} --recv-keys 44D1C0F82525FE49
  register: gpg_import_spender_result
  changed_when: "'imported: 1' in gpg_import_spender_result.stderr"

- name: Install PaX utilities.
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - paxctl
    - paxtest
    - pax-utils

- name: Fetch paxctld package.
  get_url:
      url: "{{ paxctld_deb_url }}"
      dest: "{{ download_directory }}/{{ paxctld_filename }}"

- name: Fetch paxctld package signature.
  get_url:
      url: "{{ paxctld_sig_url }}"
      dest: "{{ download_directory }}/{{ paxctld_filename }}.sig"

- name: Verify paxctld package GPG signature.
  command: gpg --verify {{ download_directory }}/{{ paxctld_filename }}.sig
  register: gpg_verify_result
  changed_when: false

# the default paxctld config only enables EMUTRAP on Python, which will
# break the Ansible connection when the service runs post-install.
# couldn't find a reliable way to make it so the service doesn't start,
# so we're writing our own configuration before installing the package.
- name: Write and install paxctld configuration.
  template:
    src: paxctld.conf.j2
    dest: /etc/paxctld.conf

- name: Install paxctld deb package.
  apt:
    deb: "{{ download_directory }}/{{ paxctld_filename }}"
    dpkg_options: skip-same-version,force-confdef,force-confold
  when: "'Good signature' in gpg_verify_result.stderr"
  
- name: Restart paxctld and ensure it is enabled.
  service:
    name: paxctld
    state: restarted
    enabled: yes

- name: Clean up after install.
  file:
    path: "{{ download_directory }}/{{ paxctld_filename }}"
    state: absent
